# This is a basic workflow to help you get started with Actions

name: user-java-deploy-staging

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
    paths: 
      - 'apis/user-java/**'
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: openhackf1c9cxe9acr
        # Container registry password
        password: ${{ secrets.ACR_KEY }}
        # Container registry server url
        login-server: openhackf1c9cxe9acr.azurecr.io
    - name: Build Docker Container
      run: |
        docker build apis/user-java/ -t openhackf1c9cxe9acr.azurecr.io/devopsoh/api-user-java:${{ github.run_number }}
    - name: Push to ACR
      run: |
        docker push openhackf1c9cxe9acr.azurecr.io/devopsoh/api-user-java:${{ github.run_number }}
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: openhackf1c9cxe9userjava
        # Applies to Web App only: Publish profile (*.publishsettings) file contents with Web Deploy secrets
        slot-name: staging # optional, default is production
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
        images: openhackf1c9cxe9acr.azurecr.io/api-user-java:${{ github.run_number }}
        
   
    - name: Azure logout
      run: |
        az logout    
    
